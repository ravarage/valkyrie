// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"net/netip"

	"github.com/jackc/pgx/v5/pgtype"
)

type ActivityLog struct {
	ID         int32            `json:"id"`
	UserID     pgtype.Int4      `json:"user_id"`
	Action     string           `json:"action"`
	TargetType string           `json:"target_type"`
	TargetID   pgtype.Int4      `json:"target_id"`
	Details    []byte           `json:"details"`
	IpAddress  *netip.Addr      `json:"ip_address"`
	UserAgent  pgtype.Text      `json:"user_agent"`
	CreatedAt  pgtype.Timestamp `json:"created_at"`
}

type Category struct {
	ID          int32       `json:"id"`
	CatKey      pgtype.Text `json:"cat_key"`
	Name        pgtype.Text `json:"name"`
	Description pgtype.Text `json:"description"`
	TTypeID     pgtype.Int4 `json:"t_type_id"`
	CategoryID  pgtype.Int4 `json:"category_id"`
}

type Codec struct {
	ID   int32       `json:"id"`
	Name pgtype.Text `json:"name"`
}

type File struct {
	ID       int32       `json:"id"`
	Name     pgtype.Text `json:"name"`
	Location pgtype.Text `json:"location"`
	FolderID pgtype.Int4 `json:"folder_id"`
}

type FileAttribute struct {
	ID      int32       `json:"id"`
	FileID  pgtype.Int4 `json:"file_id"`
	CodecID pgtype.Int4 `json:"codec_id"`
	Format  pgtype.Text `json:"format"`
}

type FileComment struct {
	ID        int32            `json:"id"`
	FileID    pgtype.Int4      `json:"file_id"`
	UserID    pgtype.Int4      `json:"user_id"`
	Comment   string           `json:"comment"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	UpdatedAt pgtype.Timestamp `json:"updated_at"`
}

type FileMetadatum struct {
	ID         int32            `json:"id"`
	FileID     pgtype.Int4      `json:"file_id"`
	FileSize   pgtype.Int8      `json:"file_size"`
	MimeType   pgtype.Text      `json:"mime_type"`
	Checksum   pgtype.Text      `json:"checksum"`
	CreatedAt  pgtype.Timestamp `json:"created_at"`
	ModifiedAt pgtype.Timestamp `json:"modified_at"`
	AccessedAt pgtype.Timestamp `json:"accessed_at"`
}

type FilePermission struct {
	ID         int32            `json:"id"`
	FileID     pgtype.Int4      `json:"file_id"`
	UserID     pgtype.Int4      `json:"user_id"`
	Permission string           `json:"permission"`
	GrantedBy  pgtype.Int4      `json:"granted_by"`
	GrantedAt  pgtype.Timestamp `json:"granted_at"`
}

type FileTag struct {
	FileID int32 `json:"file_id"`
	TagID  int32 `json:"tag_id"`
}

type FileVersion struct {
	ID        int32            `json:"id"`
	FileID    pgtype.Int4      `json:"file_id"`
	Version   int32            `json:"version"`
	Location  string           `json:"location"`
	FileSize  pgtype.Int8      `json:"file_size"`
	CreatedBy pgtype.Int4      `json:"created_by"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	Comment   pgtype.Text      `json:"comment"`
}

type Folder struct {
	ID     int32       `json:"id"`
	Folder pgtype.Text `json:"folder"`
}

type FolderAttribute struct {
	ID       int32       `json:"id"`
	FolderID pgtype.Int4 `json:"folder_id"`
	Detail   pgtype.Text `json:"detail"`
}

type FolderPermission struct {
	ID         int32            `json:"id"`
	FolderID   pgtype.Int4      `json:"folder_id"`
	UserID     pgtype.Int4      `json:"user_id"`
	Permission string           `json:"permission"`
	GrantedBy  pgtype.Int4      `json:"granted_by"`
	GrantedAt  pgtype.Timestamp `json:"granted_at"`
}

type Format struct {
	ID    int32       `json:"id"`
	Codec pgtype.Text `json:"codec"`
}

type Role struct {
	ID          int32       `json:"id"`
	Name        pgtype.Text `json:"name"`
	Description pgtype.Text `json:"description"`
	Permissions pgtype.Text `json:"permissions"`
}

type ScheduledTask struct {
	ID        int32            `json:"id"`
	Name      string           `json:"name"`
	Type      string           `json:"type"`
	Schedule  pgtype.Text      `json:"schedule"`
	LastRun   pgtype.Timestamp `json:"last_run"`
	NextRun   pgtype.Timestamp `json:"next_run"`
	Status    pgtype.Text      `json:"status"`
	Config    []byte           `json:"config"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type StorageLocation struct {
	ID        int32            `json:"id"`
	Name      string           `json:"name"`
	Type      string           `json:"type"`
	Config    []byte           `json:"config"`
	IsActive  pgtype.Bool      `json:"is_active"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type TType struct {
	ID          int32       `json:"id"`
	TypeKey     pgtype.Text `json:"type_key"`
	Name        pgtype.Text `json:"name"`
	Description pgtype.Text `json:"description"`
}

type Tag struct {
	ID          int32       `json:"id"`
	Name        string      `json:"name"`
	Color       pgtype.Text `json:"color"`
	Description pgtype.Text `json:"description"`
	CreatedBy   pgtype.Int4 `json:"created_by"`
}

type User struct {
	ID       int32       `json:"id"`
	Username string      `json:"username"`
	Password string      `json:"password"`
	Email    pgtype.Text `json:"email"`
	RoleID   pgtype.Int4 `json:"role_id"`
	Status   pgtype.Text `json:"status"`
}

type UserFavorite struct {
	UserID  int32            `json:"user_id"`
	FileID  int32            `json:"file_id"`
	AddedAt pgtype.Timestamp `json:"added_at"`
}

type UserSession struct {
	ID        int64            `json:"id"`
	UserID    pgtype.Int4      `json:"user_id"`
	Token     string           `json:"token"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type UserSessions202508 struct {
	ID        int64            `json:"id"`
	UserID    pgtype.Int4      `json:"user_id"`
	Token     string           `json:"token"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type UserSessions202509 struct {
	ID        int64            `json:"id"`
	UserID    pgtype.Int4      `json:"user_id"`
	Token     string           `json:"token"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type UserSessions202510 struct {
	ID        int64            `json:"id"`
	UserID    pgtype.Int4      `json:"user_id"`
	Token     string           `json:"token"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type UserSessions202511 struct {
	ID        int64            `json:"id"`
	UserID    pgtype.Int4      `json:"user_id"`
	Token     string           `json:"token"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type UserSessions202512 struct {
	ID        int64            `json:"id"`
	UserID    pgtype.Int4      `json:"user_id"`
	Token     string           `json:"token"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type UserSessions202601 struct {
	ID        int64            `json:"id"`
	UserID    pgtype.Int4      `json:"user_id"`
	Token     string           `json:"token"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}

type UserSessionsDefault struct {
	ID        int64            `json:"id"`
	UserID    pgtype.Int4      `json:"user_id"`
	Token     string           `json:"token"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
}
